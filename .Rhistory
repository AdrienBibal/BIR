#######################################
#### Main function for BIR         ####
#######################################
rm(list = ls())
library(glmnet) # Lasso
library(pbapply)
library(GenSA) # simulated annealing
#### File paths ####
data.path <- "Datasets/"
out.path <- "Results/"
function.path <- "Functions/"
source.files <- list.files(path = function.path, recursive = TRUE)
invisible(sapply(source.files, function(x) source(file = paste0(function.path, x))))
Fe <- read.csv(paste0(data.path, "dataset.csv"))
X <- read.csv(paste0(data.path, "embedding.csv"), header=F)
lambda.vals <- seq(0.0001, 3.5, length = 10)
# lambda.vals <- exp(seq(log(0.0001), log(3.5), length.out = 20))
#### Run BIR ####
# Prepare fold ids
seed <- 155000
set.seed(seed)
eval.res.lambda <- c()
lambda.vals.index = 0
best_lambda.norm = 0.06
# Compute BIR on the full dataset with the best lambda
res <- RunBIR(X = scale(X, center=T, scale=F),
Fe = scale(Fe, center=T, scale=T),
lambda = best_lambda.norm)
# Compute BIR on the full dataset with the best lambda
res <- RunBIR(X = scale(X, center=T, scale=F),
Fe = Fe,
lambda = best_lambda.norm)
View(Fe)
# Compute BIR on the full dataset with the best lambda
res <- RunBIR(X = scale(X, center=T, scale=F),
Fe = scale(Fe, center=T, scale=F),
lambda = best_lambda.norm)
# Compute BIR on the full dataset with the best lambda
res <- RunBIR(X = scale(X, center=T, scale=F),
Fe = scale(Fe, center=T, scale=T),
lambda = best_lambda.norm)
Fe
# Some elements of Fe can have a standard deviation (sd) equal to 0, which is an issue when scaling.
# In ordre to solve the problem, the sd for these columns is set to 1.
Fe.sd <- apply(Fe, 2, sd) # Check which columns have sd = 0
zero.sd <- which(Fe.sd == 0)
if (length(wh.zero.sd) > 0){
Fe.sd[wh.zero.sd] <- 1
}
if (length(zero.sd) > 0){
Fe.sd[zero.sd] <- 1
}
# Compute BIR on the full dataset with the best lambda
res <- RunBIR(X = scale(X, center=T, scale=F),
Fe = scale(Fe, center=T, scale=Fe.sd),
lambda = best_lambda.norm)
res
save(res, file = paste0(out.path, "result.RData"))
save(res, file = paste0(out.path, "result_v2.RData"), version = 2)
